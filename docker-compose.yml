services:

  # MySQL for Vendor and Customer Databases
  mysql:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: romazal
      MYSQL_PASSWORD: 123456
    ports:
      - "3316:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init/mysql:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network

  # Adminer for MySQL Management
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8025:8080"
    networks:
      - ecommerce-network
    depends_on:
      - mysql

  # PostgreSQL for Orders, Products, Payments, Shipments and Product Movements Databases
  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: romazal
      POSTGRES_PASSWORD: 123456
    ports:
      - "6543:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network

  # pgAdmin for PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    ports:
      - "5050:80"
    networks:
      - ecommerce-network
    depends_on:
      - postgres

  # Redis for caching
  redis:
    image: redis
    container_name: redis-cache
    environment:
      REDIS_PASSWORD: secret
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network

  # RedisInsight for Redis Management
  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    restart: always
    ports:
      - "5540:5540"
    networks:
      - ecommerce-network
    depends_on:
      - redis

  # MongoDB for Notification Service
  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ecommerce-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: romazal
      MONGO_INITDB_ROOT_PASSWORD: 123456

  # Mongo Express for MongoDB Management
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: romazal
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    ports:
      - "8081:8081"
    networks:
      - ecommerce-network
    depends_on:
      - mongo

  # Kafka broker for Event-driven communication in KRaft mode (without Zookeeper)
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - ecommerce-network

#  kafdrop:
#    image: obsidiandynamics/kafdrop:latest
#    container_name: kafdrop
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_SERVERS: "broker:29092"
#    networks:
#      - ecommerce-network

  # MailDev for capturing and testing outbound emails in development
  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - ecommerce-network


  # Zipkin for distributed tracing and performance monitoring
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - ecommerce-network

# Service networks
networks:
  ecommerce-network:
    driver: bridge

# Data volumes
volumes:
  mysql-data:
  postgres-data:
  mongo-data:
#  kafka-data:
