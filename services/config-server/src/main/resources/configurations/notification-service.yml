spring:
  data:
    mongodb:
      username: romazal
      password: 123456
      host: localhost
      port: 27017
      database: notification
      authentication-database: admin
      uri: mongodb://romazal:123456@localhost:27017/notification?authSource=admin
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: productGroup,orderGroup,paymentGroup,shipmentGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: >
          productThresholdNotification:com.romazal.ecommerce.kafka.product.ProductThresholdNotification,
          shipmentShippedNotification:com.romazal.ecommerce.kafka.shipment.ShipmentShippedNotification,
          shipmentDeliveredNotification:com.romazal.ecommerce.kafka.shipment.ShipmentDeliveredNotification,
          orderPaymentLinkNotification:com.romazal.ecommerce.kafka.order.OrderPaymentLinkNotification,
          orderConfirmationNotification:com.romazal.ecommerce.kafka.order.OrderConfirmationNotification,
          orderCancellationNotification:com.romazal.ecommerce.kafka.order.OrderCancellationNotification,
          paymentConfirmationNotification:com.romazal.ecommerce.kafka.payment.PaymentConfirmationNotification,
          paymentRefundNotification:com.romazal.ecommerce.kafka.payment.PaymentRefundNotification
  mail:
    host: localhost
    port: 1025
    username: romazal
    password: 123456
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
server:
  port: 4090